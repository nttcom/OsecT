module CCLINK_IE_TSN_SLMP;

import zeek;

public type Packet = unit {
    fType: uint16 &convert=FType($$);
    switch ( self.fType ) {
        FType::ReqLMT          ->  reqLMT:  ReqLMT;
        FType::ResLMT          ->  resLMT:  ResLMT;
        *                      ->  unk: Unknown;
        };
};

type FType = enum {
    ReqLMT = 0x6800,
    ResLMT = 0xe800,
};

type ReqLMT = unit {
    extraData1:   bytes &size=16;
    command:      bytes &size=2;
    subcommand:   bytes &size=2;
    extraData2:   bytes &eod;

    on %done { print self; zeek::confirm_protocol();}
};

type ResLMT = unit {
    extraData1:   bytes &size=16;
    command:      bytes &size=2;
    subcommand:   bytes &size=2;
    extraData2:   bytes &eod;

    on %done { print self; zeek::confirm_protocol();}
};

type Unknown = unit {
    data:         bytes &eod;
};
